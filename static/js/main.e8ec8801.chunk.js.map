{"version":3,"sources":["hooks/useTheme/index.js","components/ThemeToggle/index.js","components/NavBar/index.js","components/SearchBar/index.js","components/RegionSelector/index.js","components/CountryCard/index.js","components/CountryList/index.js","utils/restcountries.js","hooks/rest-countries-hooks.js","hooks/end-of-page.js","sections/HomeSection/index.js","components/BackButton/index.js","components/CountryDetails/index.js","sections/CountryDetailsSection/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","defaultTheme","children","useState","theme","setTheme","value","toggleTheme","Provider","className","style","height","background","useTheme","useContext","ThemeToggle","label","data-theme","onClick","NavBar","classes","split","join","SearchBar","search","reset","inputString","setInputString","isLocked","setIsLocked","evt","data-empty","stopPropagation","onSubmit","preventDefault","type","placeholder","onChange","target","RegionSelector","onRegionSelected","region","name","CardData","num","population","capital","Intl","NumberFormat","format","CardDataShimmer","CountryCard","data","isReadyCallback","show","flag","isLoading","setIsLoading","isDelayOn","setIsDelayOn","isReady","useEffect","timeoutID","setTimeout","clearTimeout","undefined","src","alt","data-hide","onLoad","arr","Array","from","_","i","alpha3Code","CountryList","minLengthWhileLoading","elementsFullyLoaded","useRef","isFullyLoaded","setIsFullyLoaded","list","length","slice","fillVoid","handleIsReady","current","map","countryData","data-key","to","endpoint","fetchCountryListAll","a","fields","req","fetch","res","ok","Error","json","searchCountryByName","string","status","fetchCountryData","Promise","resolve","reject","then","response","fetchCountryBorders","borders","bordersAlphas","useCountryDetails","state","setState","catch","err","useEndOfPageEffect","callback","active","debounce","el","document","querySelector","listener","e","reachedEndOfPage","Math","abs","scrollHeight","scrollTop","clientHeight","console","log","addEventListener","removeEventListener","filter","item","filters","Africa","Americas","Asia","Europe","Oceania","NoMatch","CountryListAll","useCountryList","numberOfItems","setNumberOfItems","CountryListSearch","query","isSearching","useSearch","HomeSection","activeList","setActiveList","selectedRegion","setSelectedRegion","searchString","BackButton","backCallback","Details","nativeName","subregion","topLevelDomain","currencies","currency","languages","language","DetailsWithShimmer","BordersList","country","CountryDetails","isLoaded","setIsLoaded","isDelayElapsed","setIsDelayElapsed","CountryDetailsSection","code","useParams","history","useHistory","push","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.e8ec8801.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ defaultTheme = \"light\", children }) => {\r\n    const [theme, setTheme] = useState(defaultTheme)\r\n\r\n    const toggleTheme = () => {\r\n        theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\")\r\n    }\r\n\r\n    const value = {theme, toggleTheme}\r\n    const customStyle = {\r\n        height: \"100%\",\r\n        background: \"var(--secondary-color)\"\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            <div className={theme === \"dark\" ? \"dark-theme\" : \"none\"} style={customStyle}>{children}</div>\r\n        </ThemeContext.Provider>)\r\n}\r\n\r\nconst useTheme = () => {\r\n    const context = useContext(ThemeContext)\r\n\r\n    return context\r\n}\r\n\r\nexport {ThemeProvider, useTheme}","import React from 'react'\r\nimport './ThemeToggle.css'\r\nimport {useTheme} from '../../hooks/useTheme'\r\n\r\nexport const ThemeToggle = () => {\r\n    const {theme, toggleTheme} = useTheme()\r\n    const label = theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"\r\n\r\n    return (\r\n        <button className=\"toggle-theme-btn\" data-theme={theme} onClick={toggleTheme}>{label}</button>\r\n    )\r\n}","import { ThemeToggle } from '../ThemeToggle'\r\nimport './NavBar.css'\r\n\r\nexport const NavBar = ({className = \"\"}) => {\r\n    const classes = className.split(\" \")\r\n\r\n    return (\r\n        <div className={[\"navbar\", ...classes].join(\" \")}>\r\n            <h1>Where in the world?</h1>\r\n            <ThemeToggle />\r\n        </div>\r\n    )\r\n}\r\n","import './SearchBar.css'\r\nimport { useState } from 'react'\r\nimport { useTheme } from '../../hooks/useTheme'\r\n\r\nexport const SearchBar = ({search, reset, className = \"\"}) => {\r\n    const [inputString, setInputString] = useState(\"\")\r\n    const [isLocked, setIsLocked] = useState(false)\r\n    const {theme} = useTheme()\r\n    const classes = className.split(\" \")\r\n\r\n    const handleChange = (evt) => {\r\n        setInputString(evt.target.value)\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        setIsLocked(true)\r\n        search(inputString)\r\n    }\r\n\r\n    const handleClear = (evt) => {\r\n        setInputString(\"\")\r\n    }\r\n\r\n    const handleReset = (evt) => {\r\n        evt.stopPropagation()\r\n        setIsLocked(false)\r\n        setInputString(\"\")\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div className={[\"searchbar\", ...classes].join(\" \")} onClick={handleClear} data-empty={inputString === \"\" || isLocked} data-theme={theme} >\r\n            {isLocked && (<span className=\"search-label\">{inputString}<button onClick={handleReset}></button></span>)}\r\n            {!isLocked && \r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={inputString} placeholder=\"Search for a country...\" onChange={handleChange} onClick={(evt) => evt.stopPropagation()}></input>\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n}","import \"./RegionSelector.css\"\r\nimport { useTheme } from \"../../hooks/useTheme\"\r\n\r\nexport const RegionSelector = ({onRegionSelected}) => {\r\n    const { theme } = useTheme()\r\n\r\n    const handleChange = (evt) => {\r\n        const region = evt.target.value\r\n\r\n        onRegionSelected(region)\r\n    }\r\n\r\n    return (\r\n        <div className=\"region-selector\" onChange={handleChange} data-theme={theme}>\r\n            <select name=\"regions\">\r\n                <option value=\"UNSELECTED\">Filter by Region</option>\r\n                <option value=\"Africa\">Africa</option>\r\n                <option value=\"Americas\">Americas</option>\r\n                <option value=\"Asia\">Asia</option>\r\n                <option value=\"Europe\">Europe</option>\r\n                <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","import \"./CountryCard.css\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst formatNumber = (num) => {\r\n    return new Intl.NumberFormat(\"en-US\").format(num)\r\n}\r\n\r\nconst CardData = ({ name, population, region, capital }) => {\r\n    return (\r\n        <div className=\"card-data\">\r\n            <h2>{name}</h2>\r\n            <dl>\r\n                <dt>Population</dt>\r\n                <dd>{formatNumber(population)}</dd>\r\n                <dt>Region</dt>\r\n                <dd>{region}</dd>\r\n                <dt>Capital</dt>\r\n                <dd>{capital}</dd>\r\n            </dl>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CardDataShimmer = () => {\r\n    return (\r\n        <div className=\"card-data-shimmer card-data\">\r\n            <div className=\"title shimmer\" />\r\n            <div className=\"lines shimmer\" />\r\n            <div className=\"lines shimmer\" />\r\n            <div className=\"lines shimmer\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CountryCard = ({data, isReadyCallback, show}) => {\r\n    const { name, population, region, capital, flag } = data\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isDelayOn, setIsDelayOn] = useState(true)\r\n    const isReady = !isLoading && !isDelayOn && show\r\n  \r\n    useEffect(() => {\r\n        const timeoutID = setTimeout(() => setIsDelayOn(false), 1000)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(!isLoading && !isDelayOn) isReadyCallback()\r\n    })\r\n  \r\n    const handleLoad = () => {\r\n        setIsLoading(false)\r\n    }\r\n  \r\n    return (\r\n        <div className={\"country-card\"}>\r\n            {flag !== undefined && (\r\n            <img\r\n                src={flag}\r\n                alt={\"flag of \" + name}\r\n                data-hide={!isReady}\r\n                onLoad={handleLoad}\r\n            />\r\n            )}\r\n            {!isReady && <div className=\"img-shimmer shimmer\"></div>}\r\n            {isReady && <CardData {...{ name, population, region, capital }} />}\r\n            {!isReady && <CardDataShimmer />}\r\n        </div>\r\n    )\r\n  }","import \"./CountryList.css\"\r\nimport { CountryCard } from \"../CountryCard\"\r\nimport { useState, useRef } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst arr = Array.from(Array(20), (_, i) => ({ alpha3Code: `empty-${i}` }));\r\n\r\nconst fillVoid = (list, minLengthWhileLoading) => {\r\n    if (list.length < minLengthWhileLoading) return [...list, ...arr.slice(list.length, minLengthWhileLoading)];\r\n\r\n    return list;\r\n};\r\n\r\nexport const CountryList = ({data, minLengthWhileLoading=10, className = \"\"}) => {\r\n    const classes = className.split(\" \")\r\n    const elementsFullyLoaded = useRef(0)\r\n    const [isFullyLoaded, setIsFullyLoaded] = useState(false)\r\n    let list = data;\r\n\r\n    if (!isFullyLoaded) list = fillVoid(data, minLengthWhileLoading);\r\n\r\n    const handleIsReady = () => {\r\n        elementsFullyLoaded.current += 1\r\n\r\n        if (elementsFullyLoaded.current === data.length)\r\n            setIsFullyLoaded(true)\r\n    }\r\n\r\n    const toListItem = (countryData) => {\r\n        return (\r\n            <li key={countryData.alpha3Code} data-key={countryData.alpha3Code}>\r\n                <Link to={`/countries/${countryData.alpha3Code}`}>\r\n                    <CountryCard data={countryData} isReadyCallback={handleIsReady} show={isFullyLoaded} />\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className={[\"country-list\", ...classes].join(\" \")}>\r\n            { list.map(toListItem) }\r\n        </ul>\r\n    )\r\n}","const endpoint = \"https://restcountries.eu/rest/v2\";\r\n\r\nexport const fetchCountryListAll = async () => {\r\n    const fields = [\r\n        \"name\",\r\n        \"alpha3Code\",\r\n        \"population\",\r\n        \"region\",\r\n        \"capital\",\r\n        \"flag\"\r\n    ];\r\n    const req = `${endpoint}/all?fields=${fields.join(\";\")}`;\r\n    const res = await fetch(req);\r\n\r\n    if (!res.ok) throw new Error(\"Request Failed\");\r\n\r\n    const list = await res.json();\r\n\r\n    return list;\r\n};\r\n\r\nexport const searchCountryByName = async (string) => {\r\n    if (string === \"\") throw new Error(\"EMPTY_STRING\");\r\n\r\n    const fields = [\r\n        \"name\",\r\n        \"alpha3Code\",\r\n        \"population\",\r\n        \"region\",\r\n        \"capital\",\r\n        \"flag\"\r\n    ];\r\n    const req = `${endpoint}/name/${string}?fields=${fields.join(\";\")}`;\r\n\r\n    const res = await fetch(req);\r\n\r\n    if (!res.ok) {\r\n        if (res.status === 404) throw new Error(\"NO_MATCH\");\r\n\r\n        throw new Error(\"FAILED_REQUEST\");\r\n    }\r\n\r\n    const list = await res.json();\r\n\r\n    return list;\r\n};\r\n\r\nexport const fetchCountryByCode = async (code, fields) => {\r\n    const url = `${endpoint}/alpha/${code}${fields ? `&fields=${fields.join(\";\")}` : \"\"\r\n        }`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) return new Error(\"REQUEST_FAILED\");\r\n\r\n    const data = await response.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const fetchCountryData = (alpha3Code) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        fetch(`${endpoint}/alpha/${alpha3Code}`)\r\n            .then((response) => {\r\n                if (response.ok) return response.json();\r\n\r\n                reject(\"DATA NOT FOUND\");\r\n            })\r\n            .then((data) => {\r\n                resolve(data);\r\n            });\r\n    });\r\n\r\n    return promise;\r\n};\r\n\r\nexport const fetchCountryBorders = (data) => {\r\n    if (data.borders.length === 0)\r\n        return Promise.resolve(data)\r\n    \r\n    const bordersAlphas = data.borders.join(\";\");\r\n    const promise = new Promise((resolve, reject) => {\r\n        if (bordersAlphas.length === 0) resolve(data);\r\n\r\n        fetch(`${endpoint}/alpha?codes=${bordersAlphas}&fields=alpha3Code;name`)\r\n            .then((response) => {\r\n                if (response.ok) return response.json();\r\n\r\n                reject(\"COULD NOT RETRIEVE BORDERS\");\r\n            })\r\n            .then((borders) => {\r\n                resolve({\r\n                    ...data,\r\n                    borders\r\n                });\r\n            });\r\n    });\r\n\r\n    return promise;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n    fetchCountryListAll,\r\n    searchCountryByName,\r\n    fetchCountryData,\r\n    fetchCountryBorders\r\n} from \"../utils/restcountries\";\r\n\r\nexport const useCountryList = (filter) => {\r\n    const [state, setState] = useState({ isLoading: true, list: [] });\r\n\r\n    useEffect(() => {\r\n        fetchCountryListAll()\r\n            .then((list) => setState({ isLoading: false, list }))\r\n            .catch((err) => setState({ isLoading: false, err, list: [] }));\r\n    }, []);\r\n\r\n    if (filter) {\r\n        return {...state, list: state.list.filter(filter)}\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport const useSearch = (string, filter) => {\r\n    const [state, setState] = useState({ isSearching: true, list: [] });\r\n\r\n    useEffect(() => {\r\n        searchCountryByName(string)\r\n            .then((list) => setState({ isSearching: false, list }))\r\n            .catch((err) => setState({ isSearching: false, err, list: [] }));\r\n    }, [string]);\r\n\r\n    if (filter)\r\n        return {...state, list: state.list.filter(filter)}\r\n\r\n    return state;\r\n};\r\n\r\nconst pipe = (data) => Promise.resolve(data);\r\n\r\nexport const useCountryDetails = (alpha3Code) => {\r\n    const [state, setState] = useState({ status: \"LOADING\" });\r\n\r\n    useEffect(() => {\r\n        setState({status: \"LOADING\"})\r\n        pipe(alpha3Code)\r\n            .then(fetchCountryData)\r\n            .then(fetchCountryBorders)\r\n            .then((data) => setState({ status: \"OK\", data }))\r\n            .catch((err) => setState({ status: \"ERR\", err }));\r\n    }, [alpha3Code]);\r\n\r\n    return state;\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useEndOfPageEffect = (callback, active = true) => {\r\n  useEffect(() => {\r\n    if (!active) return;\r\n\r\n    let debounce = false;\r\n    const el = document.querySelector(\".App\");\r\n\r\n    const listener = (e) => {\r\n      const reachedEndOfPage =\r\n        Math.abs(el.scrollHeight - el.scrollTop - el.clientHeight) < 10;\r\n\r\n      if (!reachedEndOfPage && debounce) debounce = false;\r\n\r\n      if (reachedEndOfPage && !debounce) {\r\n        console.log(`end of page`);\r\n\r\n        debounce = true;\r\n        callback();\r\n      }\r\n    };\r\n\r\n    const clean = () => el.removeEventListener(\"scroll\", listener);\r\n\r\n    el.addEventListener(\"scroll\", listener);\r\n\r\n    return clean;\r\n  }, [callback, active]);\r\n};","import \"./HomeSection.css\"\r\nimport { useState } from \"react\"\r\nimport { SearchBar } from \"../../components/SearchBar\"\r\nimport { RegionSelector } from \"../../components/RegionSelector\"\r\nimport { CountryList } from \"../../components/CountryList\"\r\nimport { useCountryList, useSearch } from \"../../hooks/rest-countries-hooks\"\r\nimport {useEndOfPageEffect} from \"../../hooks/end-of-page\"\r\n\r\nconst filter = region => item => item.region === region\r\nconst filters = {\r\n    Africa: filter(\"Africa\"),\r\n    Americas: filter(\"Americas\"),\r\n    Asia: filter(\"Asia\"),\r\n    Europe: filter(\"Europe\"),\r\n    Oceania: filter(\"Oceania\")\r\n}\r\n\r\nconst NoMatch = () => {\r\n    return <div className=\"no-match\">No Results</div>\r\n}\r\n\r\nconst CountryListAll = ({region}) => {\r\n    const { list, err } = useCountryList(filters[region])\r\n    const [numberOfItems, setNumberOfItems] = useState(20)\r\n\r\n    useEndOfPageEffect(() => {\r\n        setNumberOfItems(numberOfItems + 20)\r\n    }, numberOfItems < list.length)\r\n\r\n    if (err) return <NoMatch />\r\n\r\n    return (\r\n        <div>\r\n            <CountryList key=\"all\" className=\"CountryList\" data={list.slice(0, numberOfItems)} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst CountryListSearch = ({ query, region }) => {\r\n    const { list, isSearching, err } = useSearch(query, filters[region]);\r\n    const [numberOfItems, setNumberOfItems] = useState(20)\r\n\r\n    useEndOfPageEffect(() => {\r\n        setNumberOfItems(numberOfItems + 20)\r\n    }, numberOfItems < list.length)\r\n\r\n    if ((!isSearching && list.length === 0) || err) return <NoMatch />\r\n\r\n    return (\r\n        <div>\r\n            <CountryList key={query} className=\"CountryList\" data={list.slice(0, numberOfItems)} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const HomeSection = ({className=\"\"}) => {\r\n    const [activeList, setActiveList] = useState(\"ALL\")\r\n    const [selectedRegion, setSelectedRegion] = useState(\"UNSELECTED\")\r\n    const [inputString, setInputString] = useState(\"\")\r\n\r\n    const handleSearch = (searchString) => {\r\n        setActiveList(\"SEARCH\")\r\n        setInputString(searchString)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setActiveList(\"ALL\")\r\n    }\r\n\r\n    const handleFilter = (region) => {\r\n        setSelectedRegion(region)\r\n    }\r\n\r\n    const classes = className.split(\" \")\r\n\r\n    return (\r\n        <section className={[\"home\", ...classes].join(\" \")} >\r\n            <div className=\"toolbar\">\r\n                <SearchBar className=\"SearchBar\" search={handleSearch} reset={handleReset} />\r\n                <RegionSelector onRegionSelected={handleFilter} />\r\n            </div>\r\n            {activeList === \"ALL\" && <CountryListAll key={`all-${selectedRegion}`} region={selectedRegion} />}\r\n            {activeList === \"SEARCH\" && <CountryListSearch query={inputString} region={selectedRegion} />}\r\n        </section>\r\n    )\r\n}","import \"./BackButton.css\"\r\nimport { useTheme } from \"../../hooks/useTheme\"\r\n\r\nexport const BackButton = ({className = \"\", backCallback}) => {\r\n    const classes = className.split(\" \")\r\n    const {theme} = useTheme()\r\n\r\n    return (\r\n        <button className={[\"back-button\", ...classes].join(\" \")} onClick={backCallback} data-theme={theme}>Back</button>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './CountryDetails.css'\r\n\r\nconst Details = ({data}) => {\r\n    return (\r\n        <div className=\"details-container\">\r\n            <h2>{data.name}</h2>\r\n            <dl className=\"details\">\r\n                <dt>Native Name</dt><dd>{data.nativeName}</dd>\r\n                <dt>Population</dt><dd>{data.population}</dd>\r\n                <dt>Region</dt><dd>{data.region}</dd>\r\n                <dt>Sub Region</dt><dd>{data.subregion}</dd>\r\n                <dt>Capital</dt><dd>{data.capital}</dd>\r\n            </dl>\r\n            <dl className=\"details\">\r\n                <dt>Top Level Domain</dt><dd>{data.topLevelDomain}</dd>\r\n                <dt>Currencies</dt><dd>{data.currencies.map(currency => currency.name).join(\", \")}</dd>\r\n                <dt>Languages</dt><dd>{data.languages.map(language => language.name).join(\", \")}</dd>\r\n            </dl>\r\n            {data.borders.length > 0 && <BordersList borders={data.borders} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DetailsWithShimmer = () => {\r\n    return (\r\n        <div className=\"details-shimmer\">\r\n            <div className=\"title shimmer\" />\r\n            <div className=\"lines shimmer\"></div>\r\n            <div className=\"lines shimmer\"></div>\r\n            <div className=\"lines shimmer\"></div>\r\n            <div className=\"lines shimmer\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BordersList = ({ borders }) => {\r\n    return (\r\n        <dl className=\"details borders\">\r\n            <dt>Border Countries</dt>\r\n            <dd>{borders.map(country => <Link key={country.alpha3Code} to={`/countries/${country.alpha3Code}`}>{country.name}</Link>)}</dd>\r\n        </dl>\r\n    )\r\n}\r\n\r\nexport const CountryDetails = ({ className = \"\", data }) => {\r\n    const classes = className.split(\" \")\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [isDelayElapsed, setIsDelayElapsed] = useState(false)\r\n    const isReady = isLoaded && isDelayElapsed\r\n\r\n    useEffect(() => {\r\n        const timeoutID = setTimeout(() => setIsDelayElapsed(true), 600)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    }, [])\r\n\r\n    const handleLoad = () => {\r\n        setIsLoaded(true)\r\n    }\r\n\r\n    return (\r\n        <div className={[\"country-details\", ...classes].join(\" \")} >\r\n            {data !== undefined && <img src={data.flag} alt={`flag of ${data.name}`} data-hide={!isReady} onLoad={handleLoad} />}\r\n            {!isReady && <div className=\"shimmer img-shimmer\" />}\r\n            {isReady && <Details data={data} />}\r\n            {!isReady && <DetailsWithShimmer />}\r\n        </div>\r\n    )\r\n}","import \"./CountryDetailsSection.css\"\r\nimport { BackButton } from \"../../components/BackButton\"\r\nimport { CountryDetails } from \"../../components/CountryDetails\"\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport { useCountryDetails } from \"../../hooks/rest-countries-hooks\"\r\n\r\nexport const CountryDetailsSection = ({className = \"\"}) => {\r\n    const { code } = useParams()\r\n    const state = useCountryDetails(code)\r\n    const history = useHistory()\r\n\r\n    const handleBack = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const classes = className.split(\" \")\r\n\r\n    return (\r\n        <section className={[\"details-section\", ...classes].join(\" \")}>\r\n            <BackButton className=\"flex-start\" backCallback={handleBack} />\r\n            <CountryDetails key={code} className=\"margin-top\" data={state.data} />\r\n        </section>\r\n    )\r\n}","import \"./App.css\"\r\nimport { NavBar } from \"../NavBar\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport { ThemeProvider } from '../../hooks/useTheme'\r\nimport { HomeSection } from \"../../sections/HomeSection\"\r\nimport { CountryDetailsSection } from \"../../sections/CountryDetailsSection\"\r\n\r\nexport default function App() {\r\n    return (\r\n        <ThemeProvider>\r\n            <div className=\"App\">\r\n                <NavBar className=\"padding-x no-shrink\" />\r\n                <div className=\"content\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <HomeSection />\r\n                        </Route>\r\n                        <Route exact path=\"/countries/:code\">\r\n                            <CountryDetailsSection />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={process.env.REACT_APP_BASENAME}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}